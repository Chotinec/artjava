Index: config/messages/app.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/messages/app.properties	(date 1536794426000)
+++ config/messages/app.properties	(date 1536794430657)
@@ -16,6 +16,11 @@
 user.password=Password
 user.caloriesPerDay=Daily calorie limit
 
+userTo.name=Name
+userTo.email=Email
+userTo.password=Password
+userTo.caloriesPerDay=Daily calorie limit
+
 meal.title=Meals
 meal.edit=Edit meal
 meal.add=Add meal
@@ -34,10 +39,22 @@
 common.saved=Record saved
 common.enabled=Record enabled
 common.disabled=Record disabled
-common.errorStatus=Error status
-common.appError=Application error
+common.search=Search
+
+error.appError=Application error
+error.dataNotFound=Data not found
+error.dataError=Data error
+error.validationError=Validation error
 
 exception.user.duplicateEmail=User with this email already exists
 exception.meal.duplicateDateTime=You already have meal with this date/time
+
+NotEmpty="{0}" must not be empty
+NotBlank="{0}" must not be empty
+NotNull="{0}" must not be empty
+Email= Invalid format of "{0}"
+Range="{0}" must be between {2} and {1}
+Length="{0}" length must be between {2} and {1}
+Size="{0}" size must be between {2} and {1}
 common.save=Save
 common.cancel=Cancel
\ No newline at end of file
Index: src/main/java/ru/javawebinar/topjava/util/exception/ErrorInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/exception/ErrorInfo.java	(date 1536794426000)
+++ src/main/java/ru/javawebinar/topjava/util/exception/ErrorInfo.java	(date 1536794430678)
@@ -3,11 +3,13 @@
 public class ErrorInfo {
     private final String url;
     private final ErrorType type;
+    private final String typeMessage;
     private final String[] details;
 
-    public ErrorInfo(CharSequence url, ErrorType type, String... details) {
+    public ErrorInfo(CharSequence url, ErrorType type, String typeMessage, String... details) {
         this.url = url.toString();
         this.type = type;
+        this.typeMessage = typeMessage;
         this.details = details;
     }
 }
\ No newline at end of file
Index: config/messages/app_ru.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/messages/app_ru.properties	(date 1536794426000)
+++ config/messages/app_ru.properties	(date 1536794430669)
@@ -16,6 +16,11 @@
 user.password=Пароль
 user.caloriesPerDay=Норма калорий в день
 
+userTo.name=Имя
+userTo.email=Почта
+userTo.password=Пароль
+userTo.caloriesPerDay=Норма калорий в день
+
 meal.title=Моя еда
 meal.edit=Редактирование еды
 meal.add=Добавление еды
@@ -34,10 +39,22 @@
 common.saved=Запись сохранена
 common.enabled=Запись активирована
 common.disabled=Запись деактивирована
-common.errorStatus=Статус ошибки
-common.appError=Ошибка приложения
+common.search=Искать
+
+error.appError=Ошибка приложения
+error.dataNotFound=Данные не найдены
+error.dataError=Ошибка в данных
+error.validationError=Ошибка проверки данных
 
 exception.user.duplicateEmail=Пользователь с такой почтой уже есть в приложении
 exception.meal.duplicateDateTime=У вас уже есть еда с такой датой/временем
+
+NotEmpty=Поле "{0}" не должно быть пустым
+NotBlank=Поле "{0}" не должно быть пустым
+NotNull=Поле "{0}" не должно быть пустым
+Email=Неверный формат поля "{0}"
+Range=Поле "{0}" должно быть между {2} и {1}
+Length=Длинна поля "{0}" должена быть между {2} и {1}
+Size=Размер поля "{0}" должен быть между {2} и {1}
 common.save=Сохранить
 common.cancel=Отменить
\ No newline at end of file
Index: src/main/webapp/resources/js/topjava.users.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/resources/js/topjava.users.js	(date 1536794426000)
+++ src/main/webapp/resources/js/topjava.users.js	(date 1536794430729)
@@ -22,13 +22,7 @@
 
 // $(document).ready(function () {
 $(function () {
-    datatableApi = $("#datatable").DataTable({
-        "ajax": {
-            "url": ajaxUrl,
-            "dataSrc": ""
-        },
-        "paging": false,
-        "info": true,
+    datatableApi = $('#datatable').DataTable(extendsOpts({
         "columns": [
             {
                 "data": "name"
@@ -84,7 +78,6 @@
             if (!data.enabled) {
                 $(row).attr("data-userEnabled", false);
             }
-        },
-        "initComplete": makeEditable
-    });
+        }
+    }));
 });
\ No newline at end of file
Index: src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java	(date 1536794426000)
+++ src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java	(date 1536794430693)
@@ -23,7 +23,10 @@
 import ru.javawebinar.topjava.util.exception.NotFoundException;
 
 import javax.servlet.http.HttpServletRequest;
-import java.util.*;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.Optional;
 
 import static ru.javawebinar.topjava.util.exception.ErrorType.*;
 
@@ -76,10 +79,7 @@
                 ((BindException) e).getBindingResult() : ((MethodArgumentNotValidException) e).getBindingResult();
 
         String[] details = result.getFieldErrors().stream()
-                .map(fe -> {
-                    String msg = fe.getDefaultMessage();
-                    return msg == null ? null : (msg.startsWith(fe.getField())) ? msg : fe.getField() + ' ' + msg;
-                }).filter(Objects::nonNull)
+                .map(fe -> messageUtil.getMessage(fe))
                 .toArray(String[]::new);
 
         return logAndGetErrorInfo(req, e, false, VALIDATION_ERROR, details);
@@ -97,8 +97,7 @@
         return logAndGetErrorInfo(req, e, true, APP_ERROR);
     }
 
-    //    https://stackoverflow.com/questions/538870/should-private-helper-methods-be-static-if-they-can-be-static
-    private static ErrorInfo logAndGetErrorInfo(HttpServletRequest req, Exception e, boolean logException, ErrorType errorType, String... details) {
+    private ErrorInfo logAndGetErrorInfo(HttpServletRequest req, Exception e, boolean logException, ErrorType errorType, String... details) {
         Throwable rootCause = ValidationUtil.getRootCause(e);
         if (logException) {
             log.error(errorType + " at request " + req.getRequestURL(), rootCause);
@@ -106,6 +105,7 @@
             log.warn("{} at request  {}: {}", errorType, req.getRequestURL(), rootCause.toString());
         }
         return new ErrorInfo(req.getRequestURL(), errorType,
+                messageUtil.getMessage(errorType.getErrorCode()),
                 details.length != 0 ? details : new String[]{ValidationUtil.getMessage(rootCause)});
     }
 }
\ No newline at end of file
Index: src/main/webapp/resources/js/topjava.meals.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/resources/js/topjava.meals.js	(date 1536794426000)
+++ src/main/webapp/resources/js/topjava.meals.js	(date 1536794430721)
@@ -28,13 +28,7 @@
 });
 
 $(function () {
-    datatableApi = $("#datatable").DataTable({
-        "ajax": {
-            "url": ajaxUrl,
-            "dataSrc": ""
-        },
-        "paging": false,
-        "info": true,
+    datatableApi = $('#datatable').DataTable(extendsOpts({
         "columns": [
             {
                 "data": "dateTime"
@@ -64,9 +58,8 @@
         ],
         "createdRow": function (row, data, dataIndex) {
             $(row).attr("data-mealExceed", data.exceed);
-        },
-        "initComplete": makeEditable
-    });
+        }
+    }));
 
     $.datetimepicker.setLocale(localeCode);
 
Index: src/main/webapp/resources/js/topjava.common.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/resources/js/topjava.common.js	(date 1536794426000)
+++ src/main/webapp/resources/js/topjava.common.js	(date 1536794430715)
@@ -15,6 +15,25 @@
     });
 }
 
+// https://api.jquery.com/jquery.extend/#jQuery-extend-deep-target-object1-objectN
+function extendsOpts(opts) {
+    $.extend(true, opts,
+        {
+            "ajax": {
+                "url": ajaxUrl,
+                "dataSrc": ""
+            },
+            "paging": false,
+            "info": true,
+            "language": {
+                "search": i18n["common.search"]
+            },
+            "initComplete": makeEditable
+        }
+    );
+    return opts;
+}
+
 function add() {
     $("#modalTitle").html(i18n["addTitle"]);
     form.find(":input").val("");
Index: src/main/java/ru/javawebinar/topjava/web/GlobalControllerExceptionHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/GlobalControllerExceptionHandler.java	(date 1536794426000)
+++ src/main/java/ru/javawebinar/topjava/web/GlobalControllerExceptionHandler.java	(date 1536794430702)
@@ -2,11 +2,13 @@
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.ControllerAdvice;
 import org.springframework.web.bind.annotation.ExceptionHandler;
 import org.springframework.web.servlet.ModelAndView;
 import ru.javawebinar.topjava.AuthorizedUser;
 import ru.javawebinar.topjava.util.ValidationUtil;
+import ru.javawebinar.topjava.util.exception.ErrorType;
 
 import javax.servlet.http.HttpServletRequest;
 
@@ -14,11 +16,15 @@
 public class GlobalControllerExceptionHandler {
     private static final Logger log = LoggerFactory.getLogger(GlobalControllerExceptionHandler.class);
 
+    @Autowired
+    private MessageUtil messageUtil;
+
     @ExceptionHandler(Exception.class)
     public ModelAndView defaultErrorHandler(HttpServletRequest req, Exception e) throws Exception {
-        log.error("Exception at request " + req.getRequestURL(), e);
-        ModelAndView mav = new ModelAndView("exception/exception");
         Throwable rootCause = ValidationUtil.getRootCause(e);
+        log.error("Exception at request " + req.getRequestURL(), rootCause);
+        ModelAndView mav = new ModelAndView("exception/exception");
+        mav.addObject("typeMessage", messageUtil.getMessage(ErrorType.APP_ERROR.getErrorCode()));
         mav.addObject("exception", rootCause);
         mav.addObject("message", ValidationUtil.getMessage(rootCause));
 
Index: src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java	(date 1536794426000)
+++ src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java	(date 1536794430685)
@@ -1,8 +1,18 @@
 package ru.javawebinar.topjava.util.exception;
 
 public enum ErrorType {
-    APP_ERROR,
-    DATA_NOT_FOUND,
-    DATA_ERROR,
-    VALIDATION_ERROR
+    APP_ERROR("error.appError"),
+    DATA_NOT_FOUND("error.dataNotFound"),
+    DATA_ERROR("error.dataError"),
+    VALIDATION_ERROR("error.validationError");
+
+    private final String errorCode;
+
+    ErrorType(String errorCode) {
+        this.errorCode = errorCode;
+    }
+
+    public String getErrorCode() {
+        return errorCode;
+    }
 }
Index: src/main/java/ru/javawebinar/topjava/web/MessageUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/MessageUtil.java	(date 1536794426000)
+++ src/main/java/ru/javawebinar/topjava/web/MessageUtil.java	(date 1536794430709)
@@ -2,6 +2,7 @@
 
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.MessageSource;
+import org.springframework.context.MessageSourceResolvable;
 import org.springframework.context.i18n.LocaleContextHolder;
 import org.springframework.stereotype.Component;
 
@@ -25,4 +26,8 @@
     public String getMessage(String code) {
         return getMessage(code, LocaleContextHolder.getLocale());
     }
+
+    public String getMessage(MessageSourceResolvable resolvable) {
+        return messageSource.getMessage(resolvable, LocaleContextHolder.getLocale());
+    }
 }
Index: src/main/webapp/WEB-INF/jsp/fragments/i18n.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/fragments/i18n.jsp	(date 1536794426000)
+++ src/main/webapp/WEB-INF/jsp/fragments/i18n.jsp	(date 1536794430746)
@@ -6,7 +6,7 @@
     const i18n = [];
     i18n["addTitle"] = '<spring:message code="${param.page}.add"/>';
     i18n["editTitle"] = '<spring:message code="${param.page}.edit"/>';
-    <c:forEach var='key' items='<%=new String[]{"common.deleted", "common.saved", "common.enabled", "common.disabled", "common.errorStatus"}%>'>
+    <c:forEach var='key' items='<%=new String[]{"common.deleted", "common.saved", "common.enabled", "common.disabled", "common.search"}%>'>
     i18n['${key}'] = '<spring:message code="${key}"/>';
     </c:forEach>
 </script>
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/exception/exception.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/jsp/exception/exception.jsp	(date 1536794426000)
+++ src/main/webapp/WEB-INF/jsp/exception/exception.jsp	(date 1536794430737)
@@ -11,7 +11,7 @@
 <div class="jumbotron">
     <div class="container text-center">
         <br>
-        <h3><spring:message code="common.appError"/></h3>
+        <h3>${typeMessage}</h3>
         <h2>${message}</h2>
     </div>
 </div>
Index: src/main/java/ru/javawebinar/topjava/to/UserTo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/to/UserTo.java	(date 1536794426000)
+++ src/main/java/ru/javawebinar/topjava/to/UserTo.java	(date 1536794645930)
@@ -21,7 +21,7 @@
     @Size(max = 100)
     private String email;
 
-    @Size(min = 5, max = 32, message = "length must between 5 and 32 characters")
+    @Size(min = 5, max = 32)
     private String password;
 
     @Range(min = 10, max = 10000)
